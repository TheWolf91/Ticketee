class Ticket < ApplicationRecord
  belongs_to :project
  belongs_to :author, class_name: "User"
  belongs_to :state # optional: true to set "belongs_to default" to false https://stackoverflow.com/questions/38983666/validation-failed-class-must-exist
  has_many :attachments, dependent: :destroy
  has_many :comments, dependent: :destroy
  has_and_belongs_to_many :tags, uniq: true
  attr_accessor :tag_names

  searchkick word_start: [:name]

  validates :name, presence: true
  validates :description, presence: true, length: { minimum: 10 }

  accepts_nested_attributes_for :attachments, reject_if: :all_blank

  before_create :assign_default_state

  def tag_names=(names)
    @tag_names = names # It was in the autogenerated tag_names method before
    # overwriting it. You need this in order to prevent that
    # something goes wrong and you need to populate data form again.
    names.split.each do |name|
      self.tags << Tag.find_or_initialize_by(name: name)
    end
  end

  private

  def assign_default_state
    self.state ||= State.default
  end
end
